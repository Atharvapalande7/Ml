# -*- coding: utf-8 -*-
"""Lab3-50.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/186srv_wMvMbpCWacVWHXdevezjPewk4s

# Importing Dependencies
"""

from sklearn.datasets import make_classification
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix
import matplotlib.pyplot as plt
import pandas as pd

"""# Generate Dataset"""

x, y = make_classification(
    n_samples=100,
    n_features=1,
    n_classes=2,
    n_clusters_per_class=1,
    flip_y=0.03,
    n_informative=1,
    n_redundant=0,
    n_repeated=0
)

x,y

len(x)

len(y)

"""# Visualize the Data"""

plt.scatter(x, y, c=y, cmap='rainbow')
plt.title('Scatter Plot of Logistic Regression')
plt.show

data = pd.DataFrame(x, columns=['x'])
data['y'] = y

data

"""# Spliting Dataset

"""

from os.path import split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.4, random_state=1)

x_train, y_train

len(x_train)

x_test , y_test

"""# Perfrom Logistic Regression

## 60/40 training
"""

model = LogisticRegression()
model.fit(x_train, y_train)

model.coef_

model.intercept_

y_pred = model.predict(x_test)

"""# Confusion Matrix"""

confusion_matrix(y_test, y_pred)

"""# Number of samples 500"""

x_1,y_1 = make_classification(
    n_samples=300,
    n_features=1,
    n_classes=2,
    n_clusters_per_class=1,
    flip_y=0.3,
    n_informative=1,
    n_redundant=0,
    n_repeated=0
)

x_1, y_1

plt.scatter(x_1, y_1, c=y_1, cmap='rainbow')
plt.title('Scatter Plot of Logistic Regression')
plt.show()

x_train_1, x_test_1, y_train_1, y_test_1 = train_test_split(x_1, y_1, test_size=0.4, random_state=1)

model_1 = LogisticRegression()
model_1.fit(x_train_1, y_train_1)

y_pred_1 = model_1.predict(x_test_1)

cm = confusion_matrix = (y_test_1, y_pred_1)
cm

"""# =========================================

# Iris Dataset
"""

data = pd.read_csv('Iris.csv')

data

data['Species'].unique()

data['Species'] = data['Species'].replace({'Iris-setosa':1, 'Iris-versicolor':2, 'Iris-virginica':3})

data

X_train, X_test, Y_train, Y_test = train_test_split(data[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']],data['Species'], test_size=0.3)

X_train

iris = LogisticRegression(max_iter=120)
iris.fit(X_train,Y_train)

Y_pred = iris.predict(X_test)

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(Y_test, Y_pred)
cm

iris.score(X_test,Y_test)

import seaborn as sn
from matplotlib import pyplot as plt
plt.figure(figsize = (5,5))
sn.heatmap(cm, annot=True)
plt.xlabel('Predicted')
plt.ylabel('Truth')

